import flixel.FlxG;
import flixel.FlxSprite;
import flixel.math.FlxMath;
import flixel.math.FlxPoint;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import flixel.util.FlxTimer;
import funkin.audio.FunkinSound;
import funkin.audio.FunkinSound;
import funkin.Conductor;
import funkin.graphics.framebuffer.BitmapDataUtil;
import funkin.graphics.framebuffer.FixedBitmapData;
import funkin.graphics.shaders.OverlayBlend;
import funkin.graphics.shaders.RuntimeRainShader;
import funkin.modding.base.ScriptedFlxRuntimeShader;
import funkin.graphics.shaders.AdjustColorShader;
import funkin.Paths;
import funkin.play.PlayState;
import funkin.play.stage.Stage;
import openfl.filters.BlurFilter;
import openfl.filters.ShaderFilter;
import flixel.addons.display.FlxBackdrop;
import funkin.util.FlxTweenUtil;
import openfl.utils.Assets;
import flixel.addons.display.FlxTiledSprite;
import StringTools;

class StrangeAlleywayErectStage extends Stage
{

	// as song goes on, these are used to make the rain more intense throught the song
	// these values are also used for the rain sound effect volume intensity!

	var colorShaderBf:AdjustColorShader;
	var colorShaderDad:AdjustColorShader;
	var colorShaderGf:AdjustColorShader;


   	function new()
	{
		super('strangeAlleyErect');
	}
    override function onCreate(event:ScriptEvent):Void
	{
		super.onCreate(event);
    }
    override function onUpdate(event:UpdateScriptEvent)
	{
		super.onUpdate(event);

		if(PlayState.instance.currentStage.getBoyfriend() != null && PlayState.instance.currentStage.getBoyfriend().shader == null) 
		{
			PlayState.instance.currentStage.getBoyfriend().shader = colorShaderBf;
			PlayState.instance.currentStage.getGirlfriend().shader = colorShaderGf;
			PlayState.instance.currentStage.getDad().shader = colorShaderDad;
		}
	}
    override function onGameOver(event:ScriptEvent):Void {
		super.onGameOver(event);
		FlxG.camera.filters = [];
	}
	function buildStage()
	{
		super.buildStage();
	
		colorShaderBf = new AdjustColorShader();
		colorShaderDad = new AdjustColorShader();
		colorShaderGf = new AdjustColorShader();
	
		colorShaderBf.brightness = 5;
		colorShaderBf.hue = 0;
		colorShaderBf.contrast = 7;
		colorShaderBf.saturation = 20;
	
		colorShaderGf.brightness = 0;
		colorShaderGf.hue = -5;
		colorShaderGf.contrast = 1;
		colorShaderGf.saturation = 20;

		colorShaderDad.hue = 0;
		colorShaderDad.contrast = 7;
		colorShaderDad.saturation = 20;
	
	}
	override function onSongRetry(event:ScriptEvent):Void {
		super.onSongRetry(event);
	}
}